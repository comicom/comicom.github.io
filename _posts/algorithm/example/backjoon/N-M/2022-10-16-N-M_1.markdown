---
layout: posts
title:  "[백준시리즈] N과 M 1"
date:   2022-10-16 12:11:28 +0900
categories: BackjoonSeries:N-M
tags:
  - python
  - algorithm
  - backtracking
  - series
---

# Introduction

https://www.acmicpc.net/problem/15649

## 문제
자연수 N과 M이 주어졌을 때, 아래 조건을 만족하는 길이가 M인 수열을 모두 구하는 프로그램을 작성하시오.
* 1부터 N까지 자연수 중에서 중복 없이 M개를 고른 수열

## 입력
첫째 줄에 자연수 N과 M이 주어진다. (1 ≤ M ≤ N ≤ 8)

## 출력
한 줄에 하나씩 문제의 조건을 만족하는 수열을 출력한다. 중복되는 수열을 여러 번 출력하면 안되며, 각 수열은 공백으로 구분해서 출력해야 한다.

수열은 사전 순으로 증가하는 순서로 출력해야 한다.

# 풀이

## 설계

* dfs를 이용해서 조건에 따라 수열을 뒤쪽에 추가한다.
  * dfs는 stack을 이용하는 탐색기법이다.
* 조건
  * 수열에 들어갈 수 있는 값의 범위는 range(1,N+1)이다.
  * 수열의 길이는 M이다.
  * 중복되는 수열을 여러번 출력하면 안된다.
    * 이미 stack에 들어가있는 값이 추가되면 안 된다.
  * 공백으로 구분해서 출력해야한다.
    * join 함수를 이용하여 변환
    * join 함수의 인수는 string type 원소를 가진 리스트여야한다. -> int일 경우 컴파일 에러
  * 사전 순으로 증가해야한다.
    * dfs를 1에서부터 오름차순으로

## 코딩

{% highlight python %}
N, M = map(int,input().split())

stack = []
result = []
def dfs(n,m):
    global stack
    if len(stack) == m:
        result.append(" ".join(map(str,stack)))
        return
    for i in range(1,n+1):
        if i not in stack or len(stack) == 0:
            stack.append(i)
            dfs(n,m)
            stack.pop()

dfs(N,M)
for res in result:
    print(res)
{% endhighlight %}