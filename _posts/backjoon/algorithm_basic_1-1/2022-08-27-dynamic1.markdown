---
layout: posts
title:  "Backjoon Algorithm 1-1: Dynamic Programming 1"
date:   2022-08-27 14:10:28 +0900
categories: Backjoon
tags:
  - python
  - algorithm
  - dynamic programming
---

# Introduction

다이나믹 프로그래밍은 계산 결과를 저장해 두었다가 필요할 때 사용하는 알고리즘 기법

큰 문제를 한 번에 해결하기 힘들 때, 작은 여러 개의 문제로 나누어서 푸는 방법

* 탑다운

한 번 구한 결과는 저장해두었다가 그대로 불러옴. 메모제이션 기법 -> 캐싱

{% highlight python %}
#(재귀-메모이제이션) 피보나치

d= [0]*100 # 한번 계산한 결과 메모이제이션(저장)하기 위한 리스트 미리 초기화

def fibo(x):
	if x==1 or x==2:
    	return 1
    if d[x]!=0: # 이미 계산 했던 것이라면 리스트에 저장해둔 값 반환
    	return d[x]
    d[x]=fibo(x-1)+fibo(x-2)
    return d[x]
{% endhighlight %}

* 바텀업

단순 반복문

{% highlight python %}
#(반복_보텀업) 피보나치

d=[0]*100 # 먼저 계산된 결과 저장할 dp 테이블

d[1]=1
d[2]=1
n=99

for i in range(3, n+1):
	d[i] = d[i-1]+ d[i-2]

print(d[n])
{% endhighlight %}

## Basic

### 1로 만들기

https://www.acmicpc.net/problem/1463

점화식

1단계

* X가 3으로 나누어 떨어지면, 3으로 나눈다.
* X가 2로 나누어 떨어지면, 2로 나눈다.
* 1을 뺀다.

2단계

* D[X] = D[X/3] + 1
* D[X] = D[X/2] + 1
* D[X] = D[X-1] + 1

3단계

dp 값 중 연산을 사용하는 횟수의 최솟값이 결과이다.

dp(X) = min(D[X/3] + 1, D[X/2] + 1, D[X-1] + 1)

{% highlight python %}
import sys
input = sys.stdin.readline

N = int(input())

D = [0 for _ in range(N+1)]

for i in range(2,N+1):
    D[i] = D[i-1] + 1
    if i%2 == 0 and D[i] > D[i//2]+1:
        D[i] = D[i//2] + 1
    if i%3 == 0 and D[i] > D[i//3]+1:
        D[i] = D[i//3] + 1

print(D[N])
{% endhighlight %}

### 2xN 타일링

https://www.acmicpc.net/problem/11726

점화식

1단계

* n=1, (A) 1
* n=2, (AA) (B) 2
* n=3, (AAA) (AB) (BA) 3
* n=4, (AAAA) (AAB) (BAA) (ABA) (BB) 5

2단계

F(x) = F(x-1) + F(x-2)

{% highlight python %}
import sys
input = sys.stdin.readline

N = int(input())

D = [0 for _ in range(N+1)]

D[0] = 1
D[1] = 1
for i in range(2,N+1):
    D[i] = D[i-1] + D[i-2]

print(D[N]%10007)
{% endhighlight %}

### 2xN 타일링 2

### 1, 2, 3 더하기

https://www.acmicpc.net/problem/9095

### 카드 구매하기

### 카드 구매하기 2

### 1, 2, 3 더하기 5

### 쉬운 계단 수

### 이친수

### 가장 긴 증가하는 부분 수열

### 가장 긴 증가하는 부분 수열 4

### 연속합

### 제곱수의 합

## Practice

### 1, 2, 3 더하기 3

### RGB거리

### 동물원

### 오르막수

### 스티커

### 포도주 시식

### 정수 삼각형

### 가장 큰 증가 부분 수열

### 가장 긴 감소하는 부분 수열

### 가장 긴 바이토닉 부분 수열

### 연속합 2

### 타일채우기

## Plus

### 동물원

### RGB거리2

### 합분해